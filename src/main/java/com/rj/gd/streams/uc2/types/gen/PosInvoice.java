/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.rj.gd.streams.uc2.types.gen;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PosInvoice extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6344863528805246546L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PosInvoice\",\"namespace\":\"com.rj.gd.streams.uc2.types.gen\",\"fields\":[{\"name\":\"InvoiceNo\",\"type\":\"string\"},{\"name\":\"CreatedAt\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"StoreId\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"PosId\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"CashierID\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"CustomerType\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"CustomerCardNo\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"TotalAmount\",\"type\":\"float\",\"default\":0.0},{\"name\":\"NumberOfItems\",\"type\":\"int\",\"default\":0},{\"name\":\"PaymentMethod\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"TaxableAmount\",\"type\":\"float\",\"default\":0.0},{\"name\":\"DeliveryType\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"DeliveryAddress\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"AddressLine\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ContactNumber\",\"type\":\"string\",\"default\":\"\"}]}},{\"name\":\"InvoiceLineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"fields\":[{\"name\":\"ItemCode\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ItemDescription\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ItemQty\",\"type\":\"int\",\"default\":0},{\"name\":\"ItemPrice\",\"type\":\"float\",\"default\":0.0},{\"name\":\"TotalValue\",\"type\":\"float\",\"default\":0.0}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<PosInvoice> ENCODER =
      new BinaryMessageEncoder<PosInvoice>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PosInvoice> DECODER =
      new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PosInvoice> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PosInvoice> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PosInvoice> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PosInvoice to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PosInvoice from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PosInvoice instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PosInvoice fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence InvoiceNo;
   private java.time.LocalDate CreatedAt;
   private java.lang.CharSequence StoreId;
   private java.lang.CharSequence PosId;
   private java.lang.CharSequence CashierID;
   private java.lang.CharSequence CustomerType;
   private java.lang.CharSequence CustomerCardNo;
   private float TotalAmount;
   private int NumberOfItems;
   private java.lang.CharSequence PaymentMethod;
   private float TaxableAmount;
   private java.lang.CharSequence DeliveryType;
   private com.rj.gd.streams.uc2.types.gen.Address DeliveryAddress;
   private java.util.List<com.rj.gd.streams.uc2.types.gen.Item> InvoiceLineItems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PosInvoice() {}

  /**
   * All-args constructor.
   * @param InvoiceNo The new value for InvoiceNo
   * @param CreatedAt The new value for CreatedAt
   * @param StoreId The new value for StoreId
   * @param PosId The new value for PosId
   * @param CashierID The new value for CashierID
   * @param CustomerType The new value for CustomerType
   * @param CustomerCardNo The new value for CustomerCardNo
   * @param TotalAmount The new value for TotalAmount
   * @param NumberOfItems The new value for NumberOfItems
   * @param PaymentMethod The new value for PaymentMethod
   * @param TaxableAmount The new value for TaxableAmount
   * @param DeliveryType The new value for DeliveryType
   * @param DeliveryAddress The new value for DeliveryAddress
   * @param InvoiceLineItems The new value for InvoiceLineItems
   */
  public PosInvoice(java.lang.CharSequence InvoiceNo, java.time.LocalDate CreatedAt, java.lang.CharSequence StoreId, java.lang.CharSequence PosId, java.lang.CharSequence CashierID, java.lang.CharSequence CustomerType, java.lang.CharSequence CustomerCardNo, java.lang.Float TotalAmount, java.lang.Integer NumberOfItems, java.lang.CharSequence PaymentMethod, java.lang.Float TaxableAmount, java.lang.CharSequence DeliveryType, com.rj.gd.streams.uc2.types.gen.Address DeliveryAddress, java.util.List<com.rj.gd.streams.uc2.types.gen.Item> InvoiceLineItems) {
    this.InvoiceNo = InvoiceNo;
    this.CreatedAt = CreatedAt;
    this.StoreId = StoreId;
    this.PosId = PosId;
    this.CashierID = CashierID;
    this.CustomerType = CustomerType;
    this.CustomerCardNo = CustomerCardNo;
    this.TotalAmount = TotalAmount;
    this.NumberOfItems = NumberOfItems;
    this.PaymentMethod = PaymentMethod;
    this.TaxableAmount = TaxableAmount;
    this.DeliveryType = DeliveryType;
    this.DeliveryAddress = DeliveryAddress;
    this.InvoiceLineItems = InvoiceLineItems;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return InvoiceNo;
    case 1: return CreatedAt;
    case 2: return StoreId;
    case 3: return PosId;
    case 4: return CashierID;
    case 5: return CustomerType;
    case 6: return CustomerCardNo;
    case 7: return TotalAmount;
    case 8: return NumberOfItems;
    case 9: return PaymentMethod;
    case 10: return TaxableAmount;
    case 11: return DeliveryType;
    case 12: return DeliveryAddress;
    case 13: return InvoiceLineItems;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: InvoiceNo = (java.lang.CharSequence)value$; break;
    case 1: CreatedAt = (java.time.LocalDate)value$; break;
    case 2: StoreId = (java.lang.CharSequence)value$; break;
    case 3: PosId = (java.lang.CharSequence)value$; break;
    case 4: CashierID = (java.lang.CharSequence)value$; break;
    case 5: CustomerType = (java.lang.CharSequence)value$; break;
    case 6: CustomerCardNo = (java.lang.CharSequence)value$; break;
    case 7: TotalAmount = (java.lang.Float)value$; break;
    case 8: NumberOfItems = (java.lang.Integer)value$; break;
    case 9: PaymentMethod = (java.lang.CharSequence)value$; break;
    case 10: TaxableAmount = (java.lang.Float)value$; break;
    case 11: DeliveryType = (java.lang.CharSequence)value$; break;
    case 12: DeliveryAddress = (com.rj.gd.streams.uc2.types.gen.Address)value$; break;
    case 13: InvoiceLineItems = (java.util.List<com.rj.gd.streams.uc2.types.gen.Item>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'InvoiceNo' field.
   * @return The value of the 'InvoiceNo' field.
   */
  public java.lang.CharSequence getInvoiceNo() {
    return InvoiceNo;
  }


  /**
   * Sets the value of the 'InvoiceNo' field.
   * @param value the value to set.
   */
  public void setInvoiceNo(java.lang.CharSequence value) {
    this.InvoiceNo = value;
  }

  /**
   * Gets the value of the 'CreatedAt' field.
   * @return The value of the 'CreatedAt' field.
   */
  public java.time.LocalDate getCreatedAt() {
    return CreatedAt;
  }


  /**
   * Sets the value of the 'CreatedAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.LocalDate value) {
    this.CreatedAt = value;
  }

  /**
   * Gets the value of the 'StoreId' field.
   * @return The value of the 'StoreId' field.
   */
  public java.lang.CharSequence getStoreId() {
    return StoreId;
  }


  /**
   * Sets the value of the 'StoreId' field.
   * @param value the value to set.
   */
  public void setStoreId(java.lang.CharSequence value) {
    this.StoreId = value;
  }

  /**
   * Gets the value of the 'PosId' field.
   * @return The value of the 'PosId' field.
   */
  public java.lang.CharSequence getPosId() {
    return PosId;
  }


  /**
   * Sets the value of the 'PosId' field.
   * @param value the value to set.
   */
  public void setPosId(java.lang.CharSequence value) {
    this.PosId = value;
  }

  /**
   * Gets the value of the 'CashierID' field.
   * @return The value of the 'CashierID' field.
   */
  public java.lang.CharSequence getCashierID() {
    return CashierID;
  }


  /**
   * Sets the value of the 'CashierID' field.
   * @param value the value to set.
   */
  public void setCashierID(java.lang.CharSequence value) {
    this.CashierID = value;
  }

  /**
   * Gets the value of the 'CustomerType' field.
   * @return The value of the 'CustomerType' field.
   */
  public java.lang.CharSequence getCustomerType() {
    return CustomerType;
  }


  /**
   * Sets the value of the 'CustomerType' field.
   * @param value the value to set.
   */
  public void setCustomerType(java.lang.CharSequence value) {
    this.CustomerType = value;
  }

  /**
   * Gets the value of the 'CustomerCardNo' field.
   * @return The value of the 'CustomerCardNo' field.
   */
  public java.lang.CharSequence getCustomerCardNo() {
    return CustomerCardNo;
  }


  /**
   * Sets the value of the 'CustomerCardNo' field.
   * @param value the value to set.
   */
  public void setCustomerCardNo(java.lang.CharSequence value) {
    this.CustomerCardNo = value;
  }

  /**
   * Gets the value of the 'TotalAmount' field.
   * @return The value of the 'TotalAmount' field.
   */
  public float getTotalAmount() {
    return TotalAmount;
  }


  /**
   * Sets the value of the 'TotalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(float value) {
    this.TotalAmount = value;
  }

  /**
   * Gets the value of the 'NumberOfItems' field.
   * @return The value of the 'NumberOfItems' field.
   */
  public int getNumberOfItems() {
    return NumberOfItems;
  }


  /**
   * Sets the value of the 'NumberOfItems' field.
   * @param value the value to set.
   */
  public void setNumberOfItems(int value) {
    this.NumberOfItems = value;
  }

  /**
   * Gets the value of the 'PaymentMethod' field.
   * @return The value of the 'PaymentMethod' field.
   */
  public java.lang.CharSequence getPaymentMethod() {
    return PaymentMethod;
  }


  /**
   * Sets the value of the 'PaymentMethod' field.
   * @param value the value to set.
   */
  public void setPaymentMethod(java.lang.CharSequence value) {
    this.PaymentMethod = value;
  }

  /**
   * Gets the value of the 'TaxableAmount' field.
   * @return The value of the 'TaxableAmount' field.
   */
  public float getTaxableAmount() {
    return TaxableAmount;
  }


  /**
   * Sets the value of the 'TaxableAmount' field.
   * @param value the value to set.
   */
  public void setTaxableAmount(float value) {
    this.TaxableAmount = value;
  }

  /**
   * Gets the value of the 'DeliveryType' field.
   * @return The value of the 'DeliveryType' field.
   */
  public java.lang.CharSequence getDeliveryType() {
    return DeliveryType;
  }


  /**
   * Sets the value of the 'DeliveryType' field.
   * @param value the value to set.
   */
  public void setDeliveryType(java.lang.CharSequence value) {
    this.DeliveryType = value;
  }

  /**
   * Gets the value of the 'DeliveryAddress' field.
   * @return The value of the 'DeliveryAddress' field.
   */
  public com.rj.gd.streams.uc2.types.gen.Address getDeliveryAddress() {
    return DeliveryAddress;
  }


  /**
   * Sets the value of the 'DeliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(com.rj.gd.streams.uc2.types.gen.Address value) {
    this.DeliveryAddress = value;
  }

  /**
   * Gets the value of the 'InvoiceLineItems' field.
   * @return The value of the 'InvoiceLineItems' field.
   */
  public java.util.List<com.rj.gd.streams.uc2.types.gen.Item> getInvoiceLineItems() {
    return InvoiceLineItems;
  }


  /**
   * Sets the value of the 'InvoiceLineItems' field.
   * @param value the value to set.
   */
  public void setInvoiceLineItems(java.util.List<com.rj.gd.streams.uc2.types.gen.Item> value) {
    this.InvoiceLineItems = value;
  }

  /**
   * Creates a new PosInvoice RecordBuilder.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder newBuilder() {
    return new com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder();
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder newBuilder(com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder other) {
    if (other == null) {
      return new com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder();
    } else {
      return new com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder(other);
    }
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing PosInvoice instance.
   * @param other The existing instance to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder newBuilder(com.rj.gd.streams.uc2.types.gen.PosInvoice other) {
    if (other == null) {
      return new com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder();
    } else {
      return new com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder(other);
    }
  }

  /**
   * RecordBuilder for PosInvoice instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PosInvoice>
    implements org.apache.avro.data.RecordBuilder<PosInvoice> {

    private java.lang.CharSequence InvoiceNo;
    private java.time.LocalDate CreatedAt;
    private java.lang.CharSequence StoreId;
    private java.lang.CharSequence PosId;
    private java.lang.CharSequence CashierID;
    private java.lang.CharSequence CustomerType;
    private java.lang.CharSequence CustomerCardNo;
    private float TotalAmount;
    private int NumberOfItems;
    private java.lang.CharSequence PaymentMethod;
    private float TaxableAmount;
    private java.lang.CharSequence DeliveryType;
    private com.rj.gd.streams.uc2.types.gen.Address DeliveryAddress;
    private com.rj.gd.streams.uc2.types.gen.Address.Builder DeliveryAddressBuilder;
    private java.util.List<com.rj.gd.streams.uc2.types.gen.Item> InvoiceLineItems;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InvoiceNo)) {
        this.InvoiceNo = data().deepCopy(fields()[0].schema(), other.InvoiceNo);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.CreatedAt)) {
        this.CreatedAt = data().deepCopy(fields()[1].schema(), other.CreatedAt);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.StoreId)) {
        this.StoreId = data().deepCopy(fields()[2].schema(), other.StoreId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.PosId)) {
        this.PosId = data().deepCopy(fields()[3].schema(), other.PosId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[4].schema(), other.CashierID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[5].schema(), other.CustomerType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.CustomerCardNo)) {
        this.CustomerCardNo = data().deepCopy(fields()[6].schema(), other.CustomerCardNo);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[7].schema(), other.TotalAmount);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[8].schema(), other.NumberOfItems);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.PaymentMethod)) {
        this.PaymentMethod = data().deepCopy(fields()[9].schema(), other.PaymentMethod);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.TaxableAmount)) {
        this.TaxableAmount = data().deepCopy(fields()[10].schema(), other.TaxableAmount);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[11].schema(), other.DeliveryType);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[12].schema(), other.DeliveryAddress);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasDeliveryAddressBuilder()) {
        this.DeliveryAddressBuilder = com.rj.gd.streams.uc2.types.gen.Address.newBuilder(other.getDeliveryAddressBuilder());
      }
      if (isValidValue(fields()[13], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[13].schema(), other.InvoiceLineItems);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing PosInvoice instance
     * @param other The existing instance to copy.
     */
    private Builder(com.rj.gd.streams.uc2.types.gen.PosInvoice other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.InvoiceNo)) {
        this.InvoiceNo = data().deepCopy(fields()[0].schema(), other.InvoiceNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CreatedAt)) {
        this.CreatedAt = data().deepCopy(fields()[1].schema(), other.CreatedAt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.StoreId)) {
        this.StoreId = data().deepCopy(fields()[2].schema(), other.StoreId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PosId)) {
        this.PosId = data().deepCopy(fields()[3].schema(), other.PosId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[4].schema(), other.CashierID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CustomerType)) {
        this.CustomerType = data().deepCopy(fields()[5].schema(), other.CustomerType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CustomerCardNo)) {
        this.CustomerCardNo = data().deepCopy(fields()[6].schema(), other.CustomerCardNo);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[7].schema(), other.TotalAmount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[8].schema(), other.NumberOfItems);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PaymentMethod)) {
        this.PaymentMethod = data().deepCopy(fields()[9].schema(), other.PaymentMethod);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TaxableAmount)) {
        this.TaxableAmount = data().deepCopy(fields()[10].schema(), other.TaxableAmount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[11].schema(), other.DeliveryType);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[12].schema(), other.DeliveryAddress);
        fieldSetFlags()[12] = true;
      }
      this.DeliveryAddressBuilder = null;
      if (isValidValue(fields()[13], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[13].schema(), other.InvoiceLineItems);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'InvoiceNo' field.
      * @return The value.
      */
    public java.lang.CharSequence getInvoiceNo() {
      return InvoiceNo;
    }


    /**
      * Sets the value of the 'InvoiceNo' field.
      * @param value The value of 'InvoiceNo'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setInvoiceNo(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.InvoiceNo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceNo' field has been set.
      * @return True if the 'InvoiceNo' field has been set, false otherwise.
      */
    public boolean hasInvoiceNo() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'InvoiceNo' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearInvoiceNo() {
      InvoiceNo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreatedAt' field.
      * @return The value.
      */
    public java.time.LocalDate getCreatedAt() {
      return CreatedAt;
    }


    /**
      * Sets the value of the 'CreatedAt' field.
      * @param value The value of 'CreatedAt'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setCreatedAt(java.time.LocalDate value) {
      validate(fields()[1], value);
      this.CreatedAt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CreatedAt' field has been set.
      * @return True if the 'CreatedAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CreatedAt' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearCreatedAt() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'StoreId' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreId() {
      return StoreId;
    }


    /**
      * Sets the value of the 'StoreId' field.
      * @param value The value of 'StoreId'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setStoreId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.StoreId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'StoreId' field has been set.
      * @return True if the 'StoreId' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'StoreId' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearStoreId() {
      StoreId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'PosId' field.
      * @return The value.
      */
    public java.lang.CharSequence getPosId() {
      return PosId;
    }


    /**
      * Sets the value of the 'PosId' field.
      * @param value The value of 'PosId'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setPosId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.PosId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'PosId' field has been set.
      * @return True if the 'PosId' field has been set, false otherwise.
      */
    public boolean hasPosId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'PosId' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearPosId() {
      PosId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CashierID' field.
      * @return The value.
      */
    public java.lang.CharSequence getCashierID() {
      return CashierID;
    }


    /**
      * Sets the value of the 'CashierID' field.
      * @param value The value of 'CashierID'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setCashierID(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.CashierID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CashierID' field has been set.
      * @return True if the 'CashierID' field has been set, false otherwise.
      */
    public boolean hasCashierID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CashierID' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearCashierID() {
      CashierID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomerType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerType() {
      return CustomerType;
    }


    /**
      * Sets the value of the 'CustomerType' field.
      * @param value The value of 'CustomerType'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setCustomerType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.CustomerType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomerType' field has been set.
      * @return True if the 'CustomerType' field has been set, false otherwise.
      */
    public boolean hasCustomerType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'CustomerType' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearCustomerType() {
      CustomerType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'CustomerCardNo' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerCardNo() {
      return CustomerCardNo;
    }


    /**
      * Sets the value of the 'CustomerCardNo' field.
      * @param value The value of 'CustomerCardNo'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setCustomerCardNo(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.CustomerCardNo = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'CustomerCardNo' field has been set.
      * @return True if the 'CustomerCardNo' field has been set, false otherwise.
      */
    public boolean hasCustomerCardNo() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'CustomerCardNo' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearCustomerCardNo() {
      CustomerCardNo = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalAmount' field.
      * @return The value.
      */
    public float getTotalAmount() {
      return TotalAmount;
    }


    /**
      * Sets the value of the 'TotalAmount' field.
      * @param value The value of 'TotalAmount'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setTotalAmount(float value) {
      validate(fields()[7], value);
      this.TotalAmount = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalAmount' field has been set.
      * @return True if the 'TotalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'TotalAmount' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearTotalAmount() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'NumberOfItems' field.
      * @return The value.
      */
    public int getNumberOfItems() {
      return NumberOfItems;
    }


    /**
      * Sets the value of the 'NumberOfItems' field.
      * @param value The value of 'NumberOfItems'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setNumberOfItems(int value) {
      validate(fields()[8], value);
      this.NumberOfItems = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'NumberOfItems' field has been set.
      * @return True if the 'NumberOfItems' field has been set, false otherwise.
      */
    public boolean hasNumberOfItems() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'NumberOfItems' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearNumberOfItems() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'PaymentMethod' field.
      * @return The value.
      */
    public java.lang.CharSequence getPaymentMethod() {
      return PaymentMethod;
    }


    /**
      * Sets the value of the 'PaymentMethod' field.
      * @param value The value of 'PaymentMethod'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setPaymentMethod(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.PaymentMethod = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'PaymentMethod' field has been set.
      * @return True if the 'PaymentMethod' field has been set, false otherwise.
      */
    public boolean hasPaymentMethod() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'PaymentMethod' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearPaymentMethod() {
      PaymentMethod = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'TaxableAmount' field.
      * @return The value.
      */
    public float getTaxableAmount() {
      return TaxableAmount;
    }


    /**
      * Sets the value of the 'TaxableAmount' field.
      * @param value The value of 'TaxableAmount'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setTaxableAmount(float value) {
      validate(fields()[10], value);
      this.TaxableAmount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'TaxableAmount' field has been set.
      * @return True if the 'TaxableAmount' field has been set, false otherwise.
      */
    public boolean hasTaxableAmount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'TaxableAmount' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearTaxableAmount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryType' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryType() {
      return DeliveryType;
    }


    /**
      * Sets the value of the 'DeliveryType' field.
      * @param value The value of 'DeliveryType'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setDeliveryType(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.DeliveryType = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryType' field has been set.
      * @return True if the 'DeliveryType' field has been set, false otherwise.
      */
    public boolean hasDeliveryType() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'DeliveryType' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearDeliveryType() {
      DeliveryType = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryAddress' field.
      * @return The value.
      */
    public com.rj.gd.streams.uc2.types.gen.Address getDeliveryAddress() {
      return DeliveryAddress;
    }


    /**
      * Sets the value of the 'DeliveryAddress' field.
      * @param value The value of 'DeliveryAddress'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setDeliveryAddress(com.rj.gd.streams.uc2.types.gen.Address value) {
      validate(fields()[12], value);
      this.DeliveryAddressBuilder = null;
      this.DeliveryAddress = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryAddress' field has been set.
      * @return True if the 'DeliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'DeliveryAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.rj.gd.streams.uc2.types.gen.Address.Builder getDeliveryAddressBuilder() {
      if (DeliveryAddressBuilder == null) {
        if (hasDeliveryAddress()) {
          setDeliveryAddressBuilder(com.rj.gd.streams.uc2.types.gen.Address.newBuilder(DeliveryAddress));
        } else {
          setDeliveryAddressBuilder(com.rj.gd.streams.uc2.types.gen.Address.newBuilder());
        }
      }
      return DeliveryAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'DeliveryAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setDeliveryAddressBuilder(com.rj.gd.streams.uc2.types.gen.Address.Builder value) {
      clearDeliveryAddress();
      DeliveryAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'DeliveryAddress' field has an active Builder instance
     * @return True if the 'DeliveryAddress' field has an active Builder instance
     */
    public boolean hasDeliveryAddressBuilder() {
      return DeliveryAddressBuilder != null;
    }

    /**
      * Clears the value of the 'DeliveryAddress' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearDeliveryAddress() {
      DeliveryAddress = null;
      DeliveryAddressBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvoiceLineItems' field.
      * @return The value.
      */
    public java.util.List<com.rj.gd.streams.uc2.types.gen.Item> getInvoiceLineItems() {
      return InvoiceLineItems;
    }


    /**
      * Sets the value of the 'InvoiceLineItems' field.
      * @param value The value of 'InvoiceLineItems'.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder setInvoiceLineItems(java.util.List<com.rj.gd.streams.uc2.types.gen.Item> value) {
      validate(fields()[13], value);
      this.InvoiceLineItems = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceLineItems' field has been set.
      * @return True if the 'InvoiceLineItems' field has been set, false otherwise.
      */
    public boolean hasInvoiceLineItems() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'InvoiceLineItems' field.
      * @return This builder.
      */
    public com.rj.gd.streams.uc2.types.gen.PosInvoice.Builder clearInvoiceLineItems() {
      InvoiceLineItems = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PosInvoice build() {
      try {
        PosInvoice record = new PosInvoice();
        record.InvoiceNo = fieldSetFlags()[0] ? this.InvoiceNo : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.CreatedAt = fieldSetFlags()[1] ? this.CreatedAt : (java.time.LocalDate) defaultValue(fields()[1]);
        record.StoreId = fieldSetFlags()[2] ? this.StoreId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.PosId = fieldSetFlags()[3] ? this.PosId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.CashierID = fieldSetFlags()[4] ? this.CashierID : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.CustomerType = fieldSetFlags()[5] ? this.CustomerType : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.CustomerCardNo = fieldSetFlags()[6] ? this.CustomerCardNo : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.TotalAmount = fieldSetFlags()[7] ? this.TotalAmount : (java.lang.Float) defaultValue(fields()[7]);
        record.NumberOfItems = fieldSetFlags()[8] ? this.NumberOfItems : (java.lang.Integer) defaultValue(fields()[8]);
        record.PaymentMethod = fieldSetFlags()[9] ? this.PaymentMethod : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.TaxableAmount = fieldSetFlags()[10] ? this.TaxableAmount : (java.lang.Float) defaultValue(fields()[10]);
        record.DeliveryType = fieldSetFlags()[11] ? this.DeliveryType : (java.lang.CharSequence) defaultValue(fields()[11]);
        if (DeliveryAddressBuilder != null) {
          try {
            record.DeliveryAddress = this.DeliveryAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("DeliveryAddress"));
            throw e;
          }
        } else {
          record.DeliveryAddress = fieldSetFlags()[12] ? this.DeliveryAddress : (com.rj.gd.streams.uc2.types.gen.Address) defaultValue(fields()[12]);
        }
        record.InvoiceLineItems = fieldSetFlags()[13] ? this.InvoiceLineItems : (java.util.List<com.rj.gd.streams.uc2.types.gen.Item>) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PosInvoice>
    WRITER$ = (org.apache.avro.io.DatumWriter<PosInvoice>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PosInvoice>
    READER$ = (org.apache.avro.io.DatumReader<PosInvoice>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










